{% macro ne_boundary_cols(type) %}
    gid AS __id__,
    {% filter geometry %}the_geom{% endfilter %} AS __geometry__,
    scalerank::float,
    featurecla AS kind,
    '{{ type }}' AS type
{% endmacro %}

{% if zoom < 2 %}

SELECT
    {{ ne_boundary_cols('country') }}
FROM
    ne_110m_admin_0_boundary_lines_land
WHERE
    {{ bounds|bbox_filter('the_geom') }}

{% elif 2 <= zoom < 5 %}

SELECT
    {{ ne_boundary_cols('country') }}
FROM
    ne_50m_admin_0_boundary_lines_land
WHERE
    {{ bounds|bbox_filter('the_geom') }}

UNION ALL

SELECT
    {{ ne_boundary_cols('state') }}
FROM
    ne_50m_admin_1_states_provinces_lines
WHERE
    {{ bounds|bbox_filter('the_geom') }}

{% elif 5 <= zoom < 8 %}

SELECT
    name,
    labelrank,
    {{ ne_boundary_cols('country') }}
FROM
    ne_10m_admin_0_boundary_lines_land
WHERE
    {{ bounds|bbox_filter('the_geom') }}

UNION ALL

SELECT
    name,
    NULL AS labelrank,
    {{ ne_boundary_cols('state') }}
FROM
    ne_10m_admin_1_states_provinces_lines
WHERE
    {{ bounds|bbox_filter('the_geom') }}

{% else %}

SELECT
  name,
  NULL AS maritime_boundary,
  admin_level,
  tags->'boundary:type' AS boundary_type,
  {% filter geometry %}way{% endfilter %} AS __geometry__,
  osm_id AS __id__,
  %#tags AS tags

FROM planet_osm_polygon

WHERE
  {{ bounds|bbox_filter('way') }}
  AND boundary='administrative'

UNION ALL

SELECT
  NULL AS name,
  'yes' AS maritime_boundary,
  NULL AS admin_level,
  NULL AS boundary_type,
  {% filter geometry %}the_geom{% endfilter %} AS __geometry__,
  gid AS __id__,
  NULL AS tags

FROM buffered_land

WHERE
  {{ bounds|bbox_filter('the_geom') }}

{% endif %}
